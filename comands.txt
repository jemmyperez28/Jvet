flask db downgrade
flask db upgrade 

flask db init  : crea los archivos iniciales. 
flask db migrate : Crea la migracion o el archivo (upgrade y downgrade)
flask db upgrade : usa el script de actualizacion de la version.
flask db downgrade : regreso a la aanterior version (una vez regresado , eliminar el ultimo archivo .py de las carpeta de migraciones)




Pues hay bastante diferencia. Con render_template ya has hecho toda la lógica y mandas a renderizar una plantilla entregando los datos necesarios ya establecidos y procesados.

Con redirect(url_for()) estás enviando el control a un método que debe procesar la lógica del mismo, preparar los datos y por último hacer el render_template

Sin render_template nunca verías una ruta, alguien tiene que renderizar la plantilla y básicamente es este método.


data = Cliente.query.with_entities(Cliente.dni).join(Mascota, Cliente.idcliente == Mascota.idcliente).add_columns(Cliente.dni).filter_by(idmascota=idmascota).one()
atenciones = Atencion.query.with_entities(Atencion.fecha_atencion,Atencion.total,Atencion.nombremascota,Atencion.atendido_por,Atencion.estado_atencion).filter_by(idvet=idvet).join(Cliente, Atencion.idcliente==Cliente.idcliente).add_columns(Cliente.nombre , Cliente.apellidos).order_by(Atencion.fecha_atencion.desc()).limit(5).all()

resultado : (47228271, 47228271)
Nota : El Query sin .all() o .first() o .one() NO FUNCIONA.

LLAVES MULTIPLES : 
__table_args__ = (db.UniqueConstraint('nombre','idvet'),)